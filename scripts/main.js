"use strict";angular.module("pubTran",["ngAnimate","ngTouch","ngRoute","ui.bootstrap","cb.x2js"]),angular.module("pubTran").config(["$routeProvider","SwProvider",function(e){e.when("/",{templateUrl:"views/main.html",controller:"mainController"})}]).run(["Sw",angular.noop]),angular.module("pubTran").run(["$templateCache",function(e){e.put("uib/template/pagination/pagination.html",'<ul class="pagination">\n<li ng-if="::boundaryLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-first"><a href ng-click="selectPage(1, $event)">{{::getText("first")}}</a></li>\n<li ng-if="::directionLinks" ng-class="{disabled: noPrevious()||ngDisabled}" class="pagination-prev"><a href ng-click="selectPage(page - 1, $event)">{{::getText("previous")}}</a></li>\n<li ng-repeat="page in pages track by $index" ng-class="{active: page.active,disabled: ngDisabled&&!page.active}" class="page-item"><a href class="page-link" ng-click="selectPage(page.number, $event)">{{page.text}}</a></li>\n<li ng-if="::directionLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-next"><a href ng-click="selectPage(page + 1, $event)">{{::getText("next")}}</a></li>\n<li ng-if="::boundaryLinks" ng-class="{disabled: noNext()||ngDisabled}" class="pagination-last"><a href ng-click="selectPage(totalPages, $event)">{{::getText("last")}}</a></li>\n</ul>\n')}]),angular.module("pubTran").constant("bartKey","MW9S-E7SL-26DU-VV8V").constant("idbName","pubTran").constant("idbVersion",1),angular.module("pubTran").factory("Idb",["idbName","idbVersion",function(e,t){var n={};return n.openConnection=function(){return navigator.serviceWorker?idb.open(e,t,function(e){e.createObjectStore("stations",{keyPath:"abbr"})}):Promise.resolve()},n}]),angular.module("pubTran").factory("Sw",function(){function e(){return navigator.serviceWorker?navigator.serviceWorker.register("/sw.js").then(function(e){return console.log("registered worker with scope: ",e.scope),e})["catch"](function(){console.log("failed to register worker")}):void 0}var t={};return t.worker=e(),t}),angular.module("pubTran").factory("Stations",["$http","x2js","bartKey","Idb",function(e,t,n,a){var r={},i=a.openConnection();return r.getAll=function(){return e({method:"GET",url:"http://api.bart.gov/api/stn.aspx?cmd=stns&key="+n}).then(function(e){var n=t.xml_str2json(e.data).root.stations.station;return i.then(function(e){if(e){var t=e.transaction("stations","readwrite"),a=t.objectStore("stations");n.forEach(function(e){a.put(e)})}}),n})},r}]),angular.module("pubTran").factory("Schedule",["$http","x2js","bartKey",function(e,t,n){function a(e){return t.xml_str2json(e.data)}var r={};return r.getRealTimeSchedule=function(t,r){var i="http://api.bart.gov/api/sched.aspx?cmd=arrive&orig="+t+"&dest="+r+"&key="+n;return e({method:"GET",url:i}).then(a)},r.getStationSchedule=function(t){var r="http://api.bart.gov/api/sched.aspx?cmd=stnsched&orig="+t+"&key="+n;return e({method:"GET",url:r}).then(a)},r}]),angular.module("pubTran").controller("mainController",["$scope","Stations","Schedule",function(e,t,n){var a=10,r=20,i=a/r;e.loadingForm=!0,e.loadingSchedules=!1,e.loadingStationSchedules=!1,e.error="",e.currentPage=1,t.getAll().then(function(t){e.stations=t,e.selectedDeparture=e.stations[0],e.selectedArrival=e.stations[1],e.loadingForm=!1}),e.validate=function(){e.error="",e.selectedDeparture.abbr===e.selectedArrival.abbr&&(e.error="Please, select different departure and arrival stations")},e.getRealTimeSchedule=function(){return e.loadingSchedules=!0,e.schedules={},e.selectedDeparture.abbr===e.selectedArrival.abbr?void(e.loadingSchedules=!1):void n.getRealTimeSchedule(e.selectedDeparture.abbr,e.selectedArrival.abbr).then(function(t){e.schedules=t.root.schedule.request.trip,e.loadingSchedules=!1,console.log(e.schedules)})},e.getStationSchedule=function(){e.loadingStationSchedules=!0,n.getStationSchedule(e.selectedDeparture.abbr).then(function(t){e.currentPage=1,e.stationSchedule=t.root.station.item,e.stationSchedulePage=e.stationSchedule.slice(0,r),e.totalItems=e.stationSchedule.length*i,console.log(e.stationSchedule),e.loadingStationSchedules=!1})},e.pageChanged=function(){var t=r*(e.currentPage-1),n=t+r;e.stationSchedulePage=e.stationSchedule.slice(t,n)}}]);